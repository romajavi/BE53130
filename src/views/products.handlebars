<div class="linea-horizontal"></div>

<div class="menu-container">
  <div class="logo">
    <a href="/">
      <img src="/img/2.png" alt="Logo de la empresa">
    </a>
  </div>
  <div class="menu">
    <span class="separator">|</span>
    <a href="/realtimeproducts" class="menu-item">Productos en Tiempo Real</a>
    <span class="separator">|</span>
    <a href="/chat" class="menu-item">Chat en Vivo</a>
    <span class="separator">|</span>
    <a href="/profile" class="menu-item">Perfil</a>
    <span class="separator">|</span>
    <a href="/logout" class="menu-item">Cerrar Sesión</a>
    <span class="separator">|</span>
  </div>
</div>

<div class="userBienvenida">
  {{#if user}}
  <p>Bienvenido, {{user.email}}!</p>
  <p>Rol: {{user.role}}</p>
  {{/if}}
</div>

<div class="carrito">
  <a id="cart-link" href="/carts/{{cartId}}">
    <i class="fas fa-shopping-cart"></i>
    <span id="cart-counter">0</span>
  </a>
</div>

<h1>Productos</h1>

<div id="contenedorProductos">
  {{#each products}}
  <div class="product-card">
    <h3>{{this.title}}</h3>
    <br>
    <p>{{this.description}}</p>
    <p>Precio: ${{this.price}}</p>
    <p>Categoría: {{this.category}}</p>
    <form>
      <input type="hidden" name="productId" value="{{this._id}}">
      <input type="number" name="quantity" value="1" min="1" max="{{this.stock}}">
      <button type="button" class="add-to-cart" data-id="{{this._id}}">Agregar al carrito</button>
    </form>
  </div>
  {{/each}}
</div>

<div class="pagination">
  {{#if hasPrevPage}}
  <a href="/products?page={{prevPage}}&limit={{limit}}">Anterior</a>
  {{/if}}

  <span>Página {{page}} de {{totalPages}}</span>

  {{#if hasNextPage}}
  <a href="/products?page={{nextPage}}&limit={{limit}}">Siguiente</a>
  {{/if}}
</div>

<script src="/socket.io/socket.io.js"></script>
<link rel="stylesheet" href="/css/styles.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<script>
  const cartLink = document.getElementById('cart-link');
  const cartCounter = document.getElementById('cart-counter');

  // Obtener el ID del carrito desde el enlace
  const cartId = cartLink.href.split('/').pop();

  // Función para agregar un producto al carrito
  async function addToCart(productId, quantity) {
    try {
      const addToCartResponse = await fetch(`/carts/${cartId}/products`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId, quantity }),
      });

      if (addToCartResponse.ok) {
        const currentCount = parseInt(cartCounter.textContent, 10) || 0;
        cartCounter.textContent = currentCount + parseInt(quantity, 10);
        console.log('Producto agregado al carrito');
        alert('Producto agregado al carrito exitosamente');
      } else {
        console.error('Error al agregar el producto al carrito');
        alert('Error al agregar el producto al carrito.');
      }
    } catch (error) {
      console.error('Error al agregar el producto al carrito', error);
      alert('Error al agregar el producto al carrito.');
    }
  }

  // Agregar evento click a los botones "Agregar al carrito"
  const addToCartButtons = document.querySelectorAll('.add-to-cart');
  addToCartButtons.forEach(button => {
    button.addEventListener('click', () => {
      const productId = button.dataset.id;
      const quantity = button.parentElement.querySelector('input[name="quantity"]').value;
      addToCart(productId, quantity);
    });
  });
</script>