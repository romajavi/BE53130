<div class="linea-horizontal"></div>

<div class="menu-container">
  <div class="logo">
    <a href="/">
      <img src="/img/2.png" alt="Logo de la empresa">
    </a>
  </div>
  <div class="menu">
    <span class="separator">|</span>
    <a href="/chat" class="menu-item">Chat en Vivo</a>
    <span class="separator">|</span>
    <a href="/profile" class="menu-item">Perfil</a>
    <span class="separator">|</span>
    <a href="/logout" class="menu-item">Cerrar Sesión</a>
    <span class="separator">|</span>
  </div>
</div>

<h1>Bienvenido al Chat</h1>

<div class="chat-container">
  <div id="chat-messages" class="message-history"></div>
  <form id="chat-form">
    <input type="text" id="message-input" required>
    <button type="submit">Enviar</button>
  </form>
</div>


<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();
  const chatForm = document.getElementById('chat-form');
  const messageInput = document.getElementById('message-input');
  const chatMessages = document.getElementById('chat-messages');
  const userId = '{{user._id}}';
  
  console.log('UserId en el cliente:', userId); // dep

  chatForm.addEventListener('submit', (e) => {
    e.preventDefault();
    console.log('Enviando mensaje. UserId:', userId, 'Mensaje:', messageInput.value); // Para depuración
    if (messageInput.value && userId) {
      socket.emit('chatMessage', { userId: userId, message: messageInput.value });
      messageInput.value = '';
    } else {
      console.error('UserId no disponible o mensaje vacío');
    }
  });
  
  socket.on('message', (data) => {
    const messageElement = document.createElement('p');
    messageElement.textContent = `${data.user} dice: ${data.message}`;
    chatMessages.appendChild(messageElement);
    chatMessages.scrollTop = chatMessages.scrollHeight;
  });

  socket.on('loadMessages', (messages) => {
    chatMessages.innerHTML = '';
    messages.forEach((msg) => {
      const messageElement = document.createElement('p');
      messageElement.textContent = `${msg.user.first_name} dice: ${msg.message}`;
      chatMessages.appendChild(messageElement);
    });
    chatMessages.scrollTop = chatMessages.scrollHeight;
  });

  // cargar mensajes en página
  socket.emit('getMessages');
</script>

<link rel="stylesheet" href="/css/styles.css">