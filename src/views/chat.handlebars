<link rel="stylesheet" href="/css/styles.css">

<div class="container">
  <div class="linea-horizontal"></div>
  <div class="menu-container">
    <div class="logo">
      <a href="/">
        <img src="/img/2.png" alt="Logo de la empresa">
      </a>
    </div>
    <div class="menu">
      <span class="separator">|</span>
      <a href="/realtimeproducts" class="menu-item">Productos en Tiempo Real</a>
      <span class="separator">|</span>
      <a href="/chat" class="menu-item">Chat en Vivo</a>
      <span class="separator">|</span>
      <a href="/profile" class="menu-item">Perfil</a>
      <span class="separator">|</span>
      <a href="/logout" class="menu-item">Cerrar Sesión</a>
      <span class="separator">|</span>
    </div>
  </div>

  <div class="chat-container">
    <h1>Bienvenido al Chat</h1>
    <div id="message-history" class="message-history">
      {{#each messages}}
      <p>{{this.user.first_name}} dice: {{this.message}}</p>
      {{/each}}
    </div>

    <form id="message-form" class="message-form">
      <input type="text" id="message" name="message" placeholder="Escribe tu mensaje aquí" required>
      <button type="submit">Enviar</button>
    </form>
  </div>

  <div class="linea-horizontal2"></div>
</div>

<script src="https://cdn.socket.io/4.7.4/socket.io.min.js"></script>

<script>
  const socket = io();

  const messageForm = document.getElementById("message-form");
  const messageInput = document.getElementById("message");
  const messageHistory = document.getElementById("message-history");

  messageForm.addEventListener("submit", (event) => {
    event.preventDefault();
    const message = messageInput.value.trim();
    if (message !== "") {
      socket.emit("message", { message: message });
      messageInput.value = "";
    }
  });

  socket.on("message", (data) => {
    const messageElement = document.createElement("p");
    messageElement.textContent = `${data.user} dice: ${data.message}`;
    messageHistory.appendChild(messageElement);
    messageHistory.scrollTop = messageHistory.scrollHeight;
  });

  socket.on("messageHistory", (messages) => {
    messageHistory.innerHTML = '';
    messages.forEach((message) => {
      const messageElement = document.createElement("p");
      messageElement.textContent = `${message.user.first_name} dice: ${message.message}`;
      messageHistory.appendChild(messageElement);
    });
  });

  // Solicitar historial de mensajes al conectarse
  socket.emit("getMessages");
</script>